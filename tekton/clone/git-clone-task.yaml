apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-clone-task
spec:
  params:
    - name: repository-url
      type: string
      description: The URL of the Git repository to clone
    - name: revision
      type: string
      description: The Git revision (branch, tag, commit SHA) to checkout
      default: "master"
    - name: output-dir
      type: string
      description: The directory for the output artifacts
      default: "build_results"
  workspaces:
    - name: output
      description: The workspace where the Git repository will be cloned and build artifacts will be stored
  steps:
    - name: build
      image: ubuntu:22.04
      script: |
        echo "Enable debug mode"
        set -x

        echo "Update package list and install dependencies"
        apt-get update
        apt-get install -y git ccache python3 ninja-build nasm yasm gawk lsb-release wget software-properties-common gnupg curl

        echo "Installing the latest CMake version"
        wget -qO- https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -
        apt-add-repository 'deb https://apt.kitware.com/ubuntu/ jammy main'
        apt-get update
        apt-get install -y cmake
        echo "CMake installation completed"

        echo "Install LLVM"
        wget -O - https://apt.llvm.org/llvm.sh | bash

        echo "Setting clang details"
        export CC=clang-18
        export CXX=clang++-18

        echo "Installing and configuring Rust non-interactively"
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

        echo "Set path for rustup"
        export PATH="$HOME/.cargo/bin:$PATH"

        echo "Configure Rust toolchain and components"
        /root/.cargo/bin/rustup toolchain install nightly-2024-04-01
        /root/.cargo/bin/rustup default nightly-2024-04-01
        /root/.cargo/bin/rustup component add rust-src

        echo "Cloning repository $(params.repository-url) on branch $(params.revision)"
        git clone --recursive --shallow-submodules $(params.repository-url) $(workspaces.output.path) --branch $(params.revision)
        echo "Repository cloned successfully"
        cd $(workspaces.output.path)
        mkdir build
        echo "Start build proces using cmake"
        cmake -S . -B build
        cmake --build build
      workspaces:
        - name: output
      resources:
        requests:
          memory: "8Gi"
          cpu: "4000m"
        limits:
          memory: "16Gi"
          cpu: "16000m"
